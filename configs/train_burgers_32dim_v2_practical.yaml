include: train_burgers_quality_v2.yaml

# 32-dim v2: PRACTICAL improvements using existing features
# 
# Current: Baseline 0.78, TTC 0.09
# Target:  Baseline 0.45-0.55, TTC 0.05-0.07
# 
# Improvements (ALL IMPLEMENTABLE NOW):
# 1. ARCHITECTURE: Larger capacity (hidden_dim 64→96)
# 2. TRAINING: More epochs (15→25), better optimization
# 3. TTC: Enhanced beam search and sampling

data:
  task: burgers1d
  split: train
  root: data/pdebench
  patch_size: 1
  download:
    test_val_datasets: burgers1d_full_v1
    train_files:
      - source: full/burgers1d/burgers1d_train_000.h5
        symlink: burgers1d_train.h5

latent:
  dim: 32
  tokens: 32

training:
  time_stride: 2
  batch_size: 12
  
  # pru2jxc4 parallel settings
  num_workers: 8
  use_parallel_encoding: true
  
  latent_cache_dir: data/latent_cache
  checkpoint_interval: 50
  
  distill_micro_batch: 3
  distill_num_taus: 5
  
  compile: true
  pin_memory: true
  
  tau_distribution:
    type: beta
    alpha: 1.2
    beta: 1.2

operator:
  pdet:
    input_dim: 32
    hidden_dim: 96        # ↑ 1.5x larger (was 64)
    depths: [1, 1, 1]     # Keep same for now
    group_size: 12        # Divides 96 evenly
    num_heads: 6          # ↑ More attention heads (was 4)

diffusion:
  latent_dim: 32
  hidden_dim: 96          # ↑ Match operator (was 64)

stages:
  operator:
    epochs: 25            # ↑ More epochs (was 15)
    
    optimizer:
      name: adamw
      lr: 1.0e-3          # Constant LR (pru2jxc4 proven method)
      weight_decay: 0.03  # ↑ Slightly higher regularization (was 0.02)
      betas: [0.9, 0.999]
    
    # NO SCHEDULER = Constant LR throughout

  diff_residual:
    epochs: 8             # ↑ More epochs (was 5)
    grad_clip: 1.0
    ema_decay: 0.999
    
    optimizer:
      name: adamw
      lr: 5.0e-5          # ↑ Slightly higher (was 3e-5)
      weight_decay: 0.015 # ↑ More regularization (was 0.01)
      betas: [0.9, 0.999]
    
    scheduler:
      name: cosineannealinglr
      t_max: 8
      eta_min: 3.0e-6

  consistency_distill:
    epochs: 8             # ↑ More epochs (was 6)
    batch_size: 6
    
    optimizer:
      name: adamw
      lr: 3.0e-5          # ↑ Slightly higher (was 2e-5)
      weight_decay: 0.015 # ↑ More regularization (was 0.01)
      betas: [0.9, 0.999]
    
    scheduler:
      name: cosineannealinglr
      t_max: 8
      eta_min: 2.0e-6

evaluation:
  enabled: true

ttc:
  enabled: true
  steps: 1
  candidates: 8           # ↑ More candidates (was 6)
  beam_width: 3           # ↑ Wider beam (was 2)
  horizon: 2
  residual_threshold: 0.35
  gamma: 1.0
  max_evaluations: 150    # ↑ More evaluations (was 100)
  
  sampler:
    tau_range: [0.15, 0.85] # ↑ Wider exploration (was 0.2-0.8)
    noise_std: 0.015        # ↑ More noise for diversity
    noise_schedule: [0.03, 0.015, 0.005] # Progressive refinement
    
  reward:
    analytical_weight: 1.0
    grid: [64, 64]
    mass_field: rho
    energy_field: e
    momentum_field: []
    weights:
      mass: 1.2           # ↑ Higher mass conservation weight
      energy: 0.15        # ↑ Higher energy weight
      penalty_negative: 0.6 # ↑ Stricter penalties
    critic:
      weight: 0.0
      hidden_dim: 256
      dropout: 0.1
      
  decoder:
    latent_dim: 32
    query_dim: 2
    hidden_dim: 96        # ↑ Match operator (was 64)
    mlp_hidden_dim: 128   # ↑ Larger MLP (was 64)
    num_layers: 3         # ↑ Deeper decoder (was 2)
    num_heads: 6          # ↑ More attention (was 4)
    frequencies: [1.0, 2.0, 4.0, 8.0] # ↑ More frequencies for detail
    output_channels:
      rho: 1
      e: 1

logging:
  wandb:
    enabled: true
    project: universal-simulator
    entity: emgun-morpheus-space
    run_name: burgers32-v2-practical
    tags: [32dim, v2_improved, larger_capacity, enhanced_ttc, unified_pipeline]

# EXPECTED OUTCOMES (CONSERVATIVE ESTIMATES):
# ─────────────────────────────────────────────────────────────────────────────
#
# Baseline (no TTC):
#   Current: 0.7845 NRMSE (very poor)
#   Target:  0.45-0.55 NRMSE (~40% improvement)
#   
#   Improvements from:
#   - 1.5x model capacity (96 vs 64 hidden_dim)
#   - 67% more training (25 vs 15 epochs)
#   - Better regularization (weight_decay 0.03 vs 0.02)
#   - Constant LR for full 25 epochs (proven effective)
#
# With TTC:
#   Current: 0.0921 NRMSE (excellent)
#   Target:  0.05-0.07 NRMSE (~30% improvement)
#   
#   Improvements from:
#   - Better baseline → better starting point for TTC
#   - 33% more candidates (8 vs 6)
#   - 50% wider beam (3 vs 2)
#   - 50% more evaluations (150 vs 100)
#   - Larger decoder (96 vs 64, 3 layers vs 2)
#   - More frequencies for finer details
#
# COMPARISON TO 16-DIM:
#   16-dim baseline: Unknown (testing)
#   16-dim + TTC: 0.1511
#   
#   32-dim v2 should beat 16-dim due to 2x capacity
#
# COMPARISON TO 64-DIM:
#   64-dim baseline: 0.1422
#   64-dim + TTC: 0.1113
#   
#   32-dim v2 target: beat 64-dim baseline, competitive TTC
#
# ─────────────────────────────────────────────────────────────────────────────
# Training time: ~30-35 min on H200 (25 epochs + larger model)
# Cost: ~$1.10 @ $2.11/hr
#
# Model size: ~350KB (vs 250KB for v1, 480KB for 64-dim)
#
# Key changes from v1:
# - hidden_dim: 64 → 96 (+50% capacity)
# - num_heads: 4 → 6 (+50% attention)
# - epochs: 15 → 25 (+67% training)
# - TTC candidates: 6 → 8 (+33%)
# - TTC beam_width: 2 → 3 (+50%)
# - decoder layers: 2 → 3 (+50% depth)

